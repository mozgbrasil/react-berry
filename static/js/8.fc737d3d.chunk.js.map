{"version":3,"sources":["views/pages/authentication/AuthWrapper1.js","views/pages/authentication/AuthCardWrapper.js","hooks/useScriptRef.js","assets/images/icons/social-google.svg","ui-component/cards/AuthFooter.js","utils/password-strength.js","views/pages/authentication/firebase-forms/FirebaseRegister.js","views/pages/authentication/authentication3/Register3.js"],"names":["AuthWrapper1","styled","backgroundColor","theme","palette","primary","light","minHeight","useStyles","makeStyles","card","maxWidth","flexGrow","flexBasis","breakpoints","down","margin","content","padding","spacing","AuthCardWrapper","children","other","classes","className","contentClass","useScriptRef","scripted","useRef","useEffect","current","AuthFooter","direction","justifyContent","variant","component","Link","href","target","underline","strengthIndicator","value","strengths","length","RegExp","test","hasNumber","hasSpecial","hasMixed","redButton","fontSize","fontWeight","grey","border","borderColor","color","textTransform","signDivider","signText","cursor","loginIcon","marginRight","loginInput","typography","customInput","FirebaseRegister","others","scriptedRef","matchDownSM","useMediaQuery","customization","useSelector","state","React","useState","showPassword","setShowPassword","checked","setChecked","strength","setStrength","level","setLevel","googleHandler","a","console","error","handleClickShowPassword","handleMouseDownPassword","event","preventDefault","changePassword","count","temp","label","errorMain","warningDark","orangeMain","successMain","successDark","Fragment","Grid","container","item","xs","AnimateButton","Button","disableElevation","fullWidth","onClick","size","src","Google","alt","width","sx","mr","sm","Box","alignItems","display","Divider","orientation","borderRadius","disableRipple","disabled","mb","Typography","initialValues","email","password","submit","validationSchema","Yup","shape","max","required","onSubmit","values","setErrors","setStatus","setSubmitting","success","err","message","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","noValidate","TextField","name","type","defaultValue","FormControl","Boolean","InputLabel","htmlFor","OutlinedInput","id","onBlur","onChange","inputProps","notchedOutline","FormHelperText","e","endAdornment","InputAdornment","position","IconButton","aria-label","onMouseDown","edge","height","FormControlLabel","control","Checkbox","to","mt","Register","useTheme","m","Logo","Stack","secondary","main","gutterBottom","textAlign","RouterLink","textDecoration"],"mappings":"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","file":"static/js/8.fc737d3d.chunk.js","sourcesContent":["// material-ui\nimport { styled } from '@material-ui/styles';\n\n//-----------------------|| AUTHENTICATION 1 WRAPPER ||-----------------------//\n\nconst AuthWrapper1 = styled('div')(({ theme }) => ({\n    backgroundColor: theme.palette.primary.light,\n    minHeight: '100vh'\n}));\n\nexport default AuthWrapper1;\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\n// material-ui\nimport { makeStyles } from '@material-ui/styles';\n\n// project import\nimport MainCard from './../../../ui-component/cards/MainCard';\n\n// style constant\nconst useStyles = makeStyles((theme) => ({\n    card: {\n        maxWidth: '475px',\n        '& > *': {\n            flexGrow: 1,\n            flexBasis: '50%'\n        },\n        [theme.breakpoints.down('sm')]: {\n            margin: '20px'\n        },\n        [theme.breakpoints.down('lg')]: {\n            maxWidth: '400px'\n        }\n    },\n    content: {\n        padding: theme.spacing(5) + ' !important',\n        [theme.breakpoints.down('lg')]: {\n            padding: theme.spacing(3) + ' !important'\n        }\n    }\n}));\n\n//-----------------------|| AUTHENTICATION CARD WRAPPER ||-----------------------//\n\nconst AuthCardWrapper = ({ children, ...other }) => {\n    const classes = useStyles();\n\n    return (\n        <MainCard className={classes.card} contentClass={classes.content} {...other}>\n            {children}\n        </MainCard>\n    );\n};\n\nAuthCardWrapper.propTypes = {\n    children: PropTypes.node\n};\n\nexport default AuthCardWrapper;\n","import { useEffect, useRef } from 'react';\n\n//-----------------------|| ELEMENT REFERENCE HOOKS  ||-----------------------//\n\nconst useScriptRef = () => {\n    const scripted = useRef(true);\n\n    useEffect(\n        () => () => {\n            scripted.current = false;\n        },\n        []\n    );\n\n    return scripted;\n};\n\nexport default useScriptRef;\n","export default __webpack_public_path__ + \"static/media/social-google.9887eb8e.svg\";","import React from 'react';\n\n// material-ui\nimport { Link, Typography, Stack } from '@material-ui/core';\n\n//-----------------------|| FOOTER - AUTHENTICATION 2 & 3 ||-----------------------//\n\nconst AuthFooter = () => {\n    return (\n        <Stack direction=\"row\" justifyContent=\"space-between\">\n            <Typography variant=\"subtitle2\" component={Link} href=\"https://berrydashboard.io\" target=\"_blank\" underline=\"hover\">\n                berrydashboard.io\n            </Typography>\n            <Typography variant=\"subtitle2\" component={Link} href=\"https://codedthemes.com\" target=\"_blank\" underline=\"hover\">\n                &copy; codedthemes.com\n            </Typography>\n        </Stack>\n    );\n};\n\nexport default AuthFooter;\n","/**\n * Password validator for login pages\n */\n\nimport value from '../assets/scss/_themes-vars.module.scss';\n\n// has number\nconst hasNumber = (value) => {\n    return new RegExp(/[0-9]/).test(value);\n};\n\n// has mix of small and capitals\nconst hasMixed = (value) => {\n    return new RegExp(/[a-z]/).test(value) && new RegExp(/[A-Z]/).test(value);\n};\n\n// has special chars\nconst hasSpecial = (value) => {\n    return new RegExp(/[!#@$%^&*)(+=._-]/).test(value);\n};\n\n// set color based on password strength\nexport const strengthColor = (count) => {\n    if (count < 2) return { label: 'Poor', color: value.errorMain };\n    if (count < 3) return { label: 'Weak', color: value.warningDark };\n    if (count < 4) return { label: 'Normal', color: value.orangeMain };\n    if (count < 5) return { label: 'Good', color: value.successMain };\n    if (count < 6) return { label: 'Strong', color: value.successDark };\n};\n\n// password strength indicator\nexport const strengthIndicator = (value) => {\n    let strengths = 0;\n    if (value.length > 5) strengths++;\n    if (value.length > 7) strengths++;\n    if (hasNumber(value)) strengths++;\n    if (hasSpecial(value)) strengths++;\n    if (hasMixed(value)) strengths++;\n    return strengths;\n};\n","import React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\n\n// material-ui\nimport { makeStyles } from '@material-ui/styles';\nimport {\n    Box,\n    Button,\n    Checkbox,\n    Divider,\n    FormControl,\n    FormControlLabel,\n    FormHelperText,\n    Grid,\n    IconButton,\n    InputAdornment,\n    InputLabel,\n    OutlinedInput,\n    TextField,\n    Typography,\n    useMediaQuery\n} from '@material-ui/core';\n\n// third party\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\n\n// project imports\nimport useScriptRef from '../../../../hooks/useScriptRef';\nimport Google from './../../../../assets/images/icons/social-google.svg';\nimport AnimateButton from './../../../../ui-component/extended/AnimateButton';\nimport { strengthColor, strengthIndicator } from '../../../../utils/password-strength';\n\n// assets\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\n\n// style constant\nconst useStyles = makeStyles((theme) => ({\n    redButton: {\n        fontSize: '1rem',\n        fontWeight: 500,\n        backgroundColor: theme.palette.grey[50],\n        border: '1px solid',\n        borderColor: theme.palette.grey[100],\n        color: theme.palette.grey[700],\n        textTransform: 'none',\n        '&:hover': {\n            backgroundColor: theme.palette.primary.light\n        },\n        [theme.breakpoints.down('sm')]: {\n            fontSize: '0.875rem'\n        }\n    },\n    signDivider: {\n        flexGrow: 1\n    },\n    signText: {\n        cursor: 'unset',\n        margin: theme.spacing(2),\n        padding: '5px 56px',\n        borderColor: theme.palette.grey[100] + ' !important',\n        color: theme.palette.grey[900] + '!important',\n        fontWeight: 500\n    },\n    loginIcon: {\n        marginRight: '16px',\n        [theme.breakpoints.down('sm')]: {\n            marginRight: '8px'\n        }\n    },\n    loginInput: {\n        ...theme.typography.customInput\n    }\n}));\n\n//===========================|| FIREBASE - REGISTER ||===========================//\n\nconst FirebaseRegister = ({ ...others }) => {\n    const classes = useStyles();\n    const scriptedRef = useScriptRef();\n    const matchDownSM = useMediaQuery((theme) => theme.breakpoints.down('sm'));\n    const customization = useSelector((state) => state.customization);\n    const [showPassword, setShowPassword] = React.useState(false);\n    const [checked, setChecked] = React.useState(true);\n\n    const [strength, setStrength] = React.useState(0);\n    const [level, setLevel] = React.useState('');\n\n    const googleHandler = async () => {\n        console.error('Register');\n    };\n\n    const handleClickShowPassword = () => {\n        setShowPassword(!showPassword);\n    };\n\n    const handleMouseDownPassword = (event) => {\n        event.preventDefault();\n    };\n\n    const changePassword = (value) => {\n        const temp = strengthIndicator(value);\n        setStrength(temp);\n        setLevel(strengthColor(temp));\n    };\n\n    useEffect(() => {\n        changePassword('123456');\n    }, []);\n\n    return (\n        <React.Fragment>\n            <Grid container direction=\"column\" justifyContent=\"center\" spacing={2}>\n                <Grid item xs={12}>\n                    <AnimateButton>\n                        <Button\n                            disableElevation\n                            fullWidth={true}\n                            className={classes.redButton}\n                            onClick={googleHandler}\n                            size=\"large\"\n                            variant=\"contained\"\n                        >\n                            <img src={Google} alt=\"google\" width=\"20px\" sx={{ mr: { xs: 1, sm: 2 } }} className={classes.loginIcon} /> Sign\n                            up with Google\n                        </Button>\n                    </AnimateButton>\n                </Grid>\n                <Grid item xs={12}>\n                    <Box\n                        sx={{\n                            alignItems: 'center',\n                            display: 'flex'\n                        }}\n                    >\n                        <Divider className={classes.signDivider} orientation=\"horizontal\" />\n                        <AnimateButton>\n                            <Button\n                                variant=\"outlined\"\n                                className={classes.signText}\n                                sx={{ borderRadius: customization.borderRadius + 'px' }}\n                                disableRipple\n                                disabled\n                            >\n                                OR\n                            </Button>\n                        </AnimateButton>\n                        <Divider className={classes.signDivider} orientation=\"horizontal\" />\n                    </Box>\n                </Grid>\n                <Grid item xs={12} container alignItems=\"center\" justifyContent=\"center\">\n                    <Box\n                        sx={{\n                            mb: 2\n                        }}\n                    >\n                        <Typography variant=\"subtitle1\">Sign up with Email address</Typography>\n                    </Box>\n                </Grid>\n            </Grid>\n\n            <Formik\n                initialValues={{\n                    email: 'info@codedthemes.com',\n                    password: '123456',\n                    submit: null\n                }}\n                validationSchema={Yup.object().shape({\n                    email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\n                    password: Yup.string().max(255).required('Password is required')\n                })}\n                onSubmit={async (values, { setErrors, setStatus, setSubmitting }) => {\n                    try {\n                        if (scriptedRef.current) {\n                            setStatus({ success: true });\n                            setSubmitting(false);\n                        }\n                    } catch (err) {\n                        console.error(err);\n                        if (scriptedRef.current) {\n                            setStatus({ success: false });\n                            setErrors({ submit: err.message });\n                            setSubmitting(false);\n                        }\n                    }\n                }}\n            >\n                {({ errors, handleBlur, handleChange, handleSubmit, isSubmitting, touched, values }) => (\n                    <form noValidate onSubmit={handleSubmit} {...others}>\n                        <Grid container spacing={matchDownSM ? 0 : 2}>\n                            <Grid item xs={12} sm={6}>\n                                <TextField\n                                    fullWidth\n                                    label=\"First Name\"\n                                    margin=\"normal\"\n                                    name=\"fname\"\n                                    type=\"text\"\n                                    defaultValue=\"Joseph\"\n                                    className={classes.loginInput}\n                                />\n                            </Grid>\n                            <Grid item xs={12} sm={6}>\n                                <TextField\n                                    fullWidth\n                                    label=\"Last Name\"\n                                    margin=\"normal\"\n                                    name=\"lname\"\n                                    type=\"text\"\n                                    defaultValue=\"Doe\"\n                                    className={classes.loginInput}\n                                />\n                            </Grid>\n                        </Grid>\n                        <FormControl fullWidth error={Boolean(touched.email && errors.email)} className={classes.loginInput}>\n                            <InputLabel htmlFor=\"outlined-adornment-email-register\">Email Address / Username</InputLabel>\n                            <OutlinedInput\n                                id=\"outlined-adornment-email-register\"\n                                type=\"email\"\n                                value={values.email}\n                                name=\"email\"\n                                onBlur={handleBlur}\n                                onChange={handleChange}\n                                inputProps={{\n                                    classes: {\n                                        notchedOutline: classes.notchedOutline\n                                    }\n                                }}\n                            />\n                            {touched.email && errors.email && (\n                                <FormHelperText error id=\"standard-weight-helper-text--register\">\n                                    {' '}\n                                    {errors.email}{' '}\n                                </FormHelperText>\n                            )}\n                        </FormControl>\n\n                        <FormControl fullWidth error={Boolean(touched.password && errors.password)} className={classes.loginInput}>\n                            <InputLabel htmlFor=\"outlined-adornment-password-register\">Password</InputLabel>\n                            <OutlinedInput\n                                id=\"outlined-adornment-password-register\"\n                                type={showPassword ? 'text' : 'password'}\n                                value={values.password}\n                                name=\"password\"\n                                label=\"Password\"\n                                onBlur={handleBlur}\n                                onChange={(e) => {\n                                    handleChange(e);\n                                    changePassword(e.target.value);\n                                }}\n                                endAdornment={\n                                    <InputAdornment position=\"end\">\n                                        <IconButton\n                                            aria-label=\"toggle password visibility\"\n                                            onClick={handleClickShowPassword}\n                                            onMouseDown={handleMouseDownPassword}\n                                            edge=\"end\"\n                                        >\n                                            {showPassword ? <Visibility /> : <VisibilityOff />}\n                                        </IconButton>\n                                    </InputAdornment>\n                                }\n                                inputProps={{\n                                    classes: {\n                                        notchedOutline: classes.notchedOutline\n                                    }\n                                }}\n                            />\n                            {touched.password && errors.password && (\n                                <FormHelperText error id=\"standard-weight-helper-text-password-register\">\n                                    {' '}\n                                    {errors.password}{' '}\n                                </FormHelperText>\n                            )}\n                        </FormControl>\n\n                        {strength !== 0 && (\n                            <FormControl fullWidth>\n                                <Box\n                                    sx={{\n                                        mb: 2\n                                    }}\n                                >\n                                    <Grid container spacing={2} alignItems=\"center\">\n                                        <Grid item>\n                                            <Box\n                                                backgroundColor={level.color}\n                                                sx={{\n                                                    width: 85,\n                                                    height: 8,\n                                                    borderRadius: '7px'\n                                                }}\n                                            ></Box>\n                                        </Grid>\n                                        <Grid item>\n                                            <Typography variant=\"subtitle1\" fontSize=\"0.75rem\">\n                                                {level.label}\n                                            </Typography>\n                                        </Grid>\n                                    </Grid>\n                                </Box>\n                            </FormControl>\n                        )}\n\n                        <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n                            <Grid item>\n                                <FormControlLabel\n                                    control={\n                                        <Checkbox\n                                            checked={checked}\n                                            onChange={(event) => setChecked(event.target.checked)}\n                                            name=\"checked\"\n                                            color=\"primary\"\n                                        />\n                                    }\n                                    label={\n                                        <Typography variant=\"subtitle1\">\n                                            Agree with &nbsp;\n                                            <Typography variant=\"subtitle1\" component={Link} to=\"#\">\n                                                Terms & Condition.\n                                            </Typography>\n                                        </Typography>\n                                    }\n                                />\n                            </Grid>\n                        </Grid>\n                        {errors.submit && (\n                            <Box\n                                sx={{\n                                    mt: 3\n                                }}\n                            >\n                                <FormHelperText error>{errors.submit}</FormHelperText>\n                            </Box>\n                        )}\n\n                        <Box\n                            sx={{\n                                mt: 2\n                            }}\n                        >\n                            <AnimateButton>\n                                <Button\n                                    disableElevation\n                                    disabled={isSubmitting}\n                                    fullWidth\n                                    size=\"large\"\n                                    type=\"submit\"\n                                    variant=\"contained\"\n                                    color=\"secondary\"\n                                >\n                                    Sign up\n                                </Button>\n                            </AnimateButton>\n                        </Box>\n                    </form>\n                )}\n            </Formik>\n        </React.Fragment>\n    );\n};\n\nexport default FirebaseRegister;\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\n\n// material-ui\nimport { useTheme } from '@material-ui/core';\nimport { Divider, Grid, Stack, Typography, useMediaQuery } from '@material-ui/core';\n\n// project imports\nimport AuthWrapper1 from './../AuthWrapper1';\nimport AuthCardWrapper from './../AuthCardWrapper';\nimport Logo from './../../../../ui-component/Logo';\nimport FirebaseRegister from './../firebase-forms/FirebaseRegister';\nimport AuthFooter from './../../../../ui-component/cards/AuthFooter';\n\n// assets\n\n//===============================|| AUTH3 - REGISTER ||===============================//\n\nconst Register = () => {\n    const theme = useTheme();\n    const matchDownSM = useMediaQuery(theme.breakpoints.down('sm'));\n\n    return (\n        <AuthWrapper1>\n            <Grid container direction=\"column\" justifyContent=\"flex-end\" sx={{ minHeight: '100vh' }}>\n                <Grid item xs={12}>\n                    <Grid container justifyContent=\"center\" alignItems=\"center\" sx={{ minHeight: 'calc(100vh - 68px)' }}>\n                        <Grid item sx={{ m: { xs: 1, sm: 3 }, mb: 0 }}>\n                            <AuthCardWrapper>\n                                <Grid container spacing={2} alignItems=\"center\" justifyContent=\"center\">\n                                    <Grid item sx={{ mb: 3 }}>\n                                        <RouterLink to=\"#\">\n                                            <Logo />\n                                        </RouterLink>\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <Grid\n                                            container\n                                            direction={matchDownSM ? 'column-reverse' : 'row'}\n                                            alignItems=\"center\"\n                                            justifyContent=\"center\"\n                                        >\n                                            <Grid item>\n                                                <Stack alignItems=\"center\" justifyContent=\"center\" spacing={1}>\n                                                    <Typography\n                                                        color={theme.palette.secondary.main}\n                                                        gutterBottom\n                                                        variant={matchDownSM ? 'h3' : 'h2'}\n                                                    >\n                                                        Sign up\n                                                    </Typography>\n                                                    <Typography variant=\"caption\" fontSize=\"16px\" textAlign={matchDownSM ? 'center' : ''}>\n                                                        Enter your credentials to continue\n                                                    </Typography>\n                                                </Stack>\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <FirebaseRegister />\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <Divider />\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <Grid item container direction=\"column\" alignItems=\"center\" xs={12}>\n                                            <Typography\n                                                component={RouterLink}\n                                                to=\"/pages/login/login3\"\n                                                variant=\"subtitle1\"\n                                                sx={{ textDecoration: 'none' }}\n                                            >\n                                                Have an account?\n                                            </Typography>\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                            </AuthCardWrapper>\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid item xs={12} sx={{ m: 3, mt: 1 }}>\n                    <AuthFooter />\n                </Grid>\n            </Grid>\n        </AuthWrapper1>\n    );\n};\n\nexport default Register;\n"],"sourceRoot":""}