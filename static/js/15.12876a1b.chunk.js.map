{"version":3,"sources":["views/patients/index.js"],"names":["AlertDialog","props","kind","other","className","React","useState","open","setOpen","key","setKey","useEffect","record","handleClose","event","console","log","handleOk","a","deleteUser","window","location","reload","url","process","fetch","method","then","res","results","catch","e","message","variant","color","onClick","children","onClose","aria-labelledby","aria-describedby","id","autoFocus","SimpleSnackbar","reason","anchorOrigin","vertical","horizontal","autoHideDuration","action","Fragment","size","aria-label","fontSize","AntdSchemaTable","data","setData","setIsLoading","setIsError","json","map","obj","_id","getPacients","columns","title","dataIndex","render","text","arr","Object","values","name","tag","length","toUpperCase","src","picture","thumbnail","gender","login","username","dob","registered","fixed","disableElevation","style","width","padding","marginLeft","background","endIcon","handleEdit","href","dataSource","pagination","pageSize","defaultPageSize","showSizeChanger","pageSizeOptions","position","scroll","y","AntdSchemaForm","formRef","useRef","handleOkSubmit","form","val","keys","collection","$root","headers","Accept","body","JSON","stringify","customComponent","custom","item","required","placeholder","addonAfter","customTableRender","red","index","green","ref","type","description","properties","$tableRender","$required","first","last","nat","cel","phone","cell","email","$componentType","$options","label","value","date","age","street","number","city","state","country","postcode","coordinates","latitude","longitude","timezone","offset","uuid","password","salt","md5","sha1","sha256","large","medium","string","default","array","col1","col2","col3","okText","onOk","onCancel","App","hash"],"mappings":"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","file":"static/js/15.12876a1b.chunk.js","sourcesContent":["// #\n// #\n// #\n// #\n\n// https://material-ui.com/pt/components/dialogs/\n\n// import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport SaveIcon from '@material-ui/icons/Save';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\n\nexport function AlertDialog(props) {\n    const { kind, ...other } = props;\n    const className = kind === 'primary' ? 'PrimaryButton' : 'SecondaryButton';\n\n    const [open, setOpen] = React.useState(false);\n    const [key, setKey] = React.useState(false);\n\n    useEffect(() => {\n        setKey(props.record.key);\n    }, []);\n\n    const handleClickOpen = (event) => {\n        setOpen(true);\n        console.log('handleClickOpen: ', event);\n    };\n\n    const handleClose = (event) => {\n        setOpen(false);\n        console.log('handleClose: ', key);\n    };\n\n    const handleOk = async (event) => {\n        setOpen(false);\n        console.log('handleOk: ', key);\n        await deleteUser(key);\n        handleClose();\n        window.location.reload(true); // @TODO: parent datagrid request load\n        // toast.warning('User deleted successfully!');\n    };\n\n    const deleteUser = async (key) => {\n        console.log('deleteUser: ', key);\n        let url = process.env.REACT_APP_API_URL + '/users/' + key;\n        const results = await fetch(url, { method: 'DELETE' })\n            .then((res) => {\n                var results = res;\n                console.log('results: ', results);\n                return results;\n            })\n            .then((res) => {\n                var results = res.results;\n                console.log('results: ', results);\n                return results;\n            })\n            .catch((e) => {\n                console.log('err: ', e.message);\n            });\n\n        console.log('results: ', results);\n\n        //  setData(results);\n    };\n\n    return (\n        <div>\n            <Button variant=\"outlined\" color=\"primary\" onClick={() => handleClickOpen(props.record.key)} className={className} {...other}>\n                {props.children}\n            </Button>\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"alert-dialog-title\" aria-describedby=\"alert-dialog-description\">\n                <DialogTitle id=\"alert-dialog-title\">{'Tem certeza de que quer excluir este registro ?'}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText id=\"alert-dialog-description\">Essa ação não é reversivel</DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\">\n                        Não\n                    </Button>\n                    <Button onClick={handleOk} color=\"primary\" autoFocus>\n                        Sim\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}\n// #\n// #\n// #\n// #\n\n// https://material-ui.com/pt/components/snackbars/\n\n// import React from 'react';\n// import Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\n\nexport function SimpleSnackbar(props) {\n    const { ...other } = props;\n\n    const [open, setOpen] = React.useState(false);\n\n    const handleClick = () => {\n        setOpen(true);\n    };\n\n    const handleClose = (event, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n\n        setOpen(false);\n    };\n\n    return (\n        <div>\n            <Button onClick={handleClick}>Open simple snackbar {props.children}</Button>\n            <Snackbar\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'left'\n                }}\n                open={open}\n                autoHideDuration={6000}\n                onClose={handleClose}\n                message=\"Note archived\"\n                action={\n                    <React.Fragment>\n                        <Button color=\"secondary\" size=\"small\" onClick={handleClose}>\n                            UNDO\n                        </Button>\n                        <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={handleClose}>\n                            <CloseIcon fontSize=\"small\" />\n                        </IconButton>\n                    </React.Fragment>\n                }\n            />\n        </div>\n    );\n}\n\n// #\n// #\n// #\n// #\n\nimport 'antd/dist/antd.css'; // or 'antd/dist/antd.less'\nimport { Table, Space, Tag, Input, Switch } from 'antd';\nimport { SettingFilled as IconSettingFilled } from '@ant-design/icons';\n\nexport function AntdSchemaTable(props) {\n    const { ...other } = props;\n\n    const [data, setData] = useState([]);\n    const [isLoading, setIsLoading] = useState(true);\n    const [isError, setIsError] = useState(false);\n\n    useEffect(() => {\n        const getPacients = async () => {\n            //\n            // setIsLoading(false);\n            //\n            try {\n                setIsLoading(true);\n                let url = process.env.REACT_APP_API_URL + '/users?page=1&pageSize=50';\n                // const response = await fetch(url);\n                // const res = await response.json();\n                // const results = res.results;\n                const results = await fetch(url)\n                    .then(async (res) => {\n                        var results = await res.json();\n                        console.log('results: ', results);\n                        return results;\n                    })\n                    .then((res) => {\n                        var results = res.results;\n\n                        // Fix: Warning: Each child in a list should have a unique \"key\" prop.\n                        var results = results.map((obj) => {\n                            obj.key = obj._id; // on object create new key name. Assign old value to this\n                            delete obj._id; //delete object with old key name\n                            return obj;\n                        });\n\n                        // Fix: obj to arr\n                        var results = results.map((obj) => {\n                            // console.log(obj);\n                            return obj;\n                        });\n\n                        // console.log(results);\n\n                        return results;\n                    })\n                    .catch((e) => {\n                        setIsError(e.message);\n                    });\n\n                console.log('results: ', results);\n\n                setData(results);\n            } catch (e) {\n                setIsLoading(false);\n                setIsError(e.message);\n            } finally {\n                setIsLoading(false);\n            }\n        };\n        getPacients();\n    }, []);\n\n    const columns = [\n        {\n            title: 'Name',\n            dataIndex: 'name',\n            key: 'name',\n            // fixed: 'left',\n            render: (text, record) => {\n                if (typeof text != 'string') {\n                    const arr = Object.values(record.name);\n                    return (\n                        <span>\n                            {arr.map((tag) => {\n                                let color = tag.length > 5 ? 'geekblue' : 'green';\n                                if (tag === 'loser') {\n                                    color = 'volcano';\n                                }\n                                return (\n                                    <Tag color={color} key={tag}>\n                                        {tag.toUpperCase()}\n                                    </Tag>\n                                );\n                            })}\n                        </span>\n                    );\n                }\n            }\n        },\n        {\n            title: 'Picture',\n            dataIndex: 'picture',\n            key: 'picture',\n            render: (text, record) => (\n                <span>\n                    <img src={record.picture.thumbnail} />\n                    {/* <Tag color={color} key={record.key}>\n                    {text.toUpperCase()}\n                </Tag> */}\n                </span>\n            )\n        },\n        {\n            title: 'Gender',\n            dataIndex: 'gender',\n            key: 'gender',\n            render: (text, record) => <Tag size=\"middle\">{record.gender}</Tag>\n        },\n        // {\n        //     title: 'e-mail',\n        //     dataIndex: 'email',\n        //     key: 'email',\n        //     render: (text, record) => <Tag size=\"middle\">{record.email}</Tag>\n        // },\n        {\n            title: 'Phone',\n            dataIndex: 'phone',\n            key: 'phone'\n        },\n        {\n            title: 'cell',\n            dataIndex: 'cell',\n            key: 'cell'\n        },\n        {\n            title: 'nat',\n            dataIndex: 'nat',\n            key: 'nat'\n        },\n        // {\n        //     title: 'Location',\n        //     dataIndex: 'location',\n        //     key: 'location',\n        //     render: (text, record) => (\n        //         <span>\n        //             <Space size=\"middle\">???</Space>\n        //             {/* <Tag color={color} key={record.key}>\n        //                 {text.toUpperCase()}\n        //             </Tag> */}\n        //         </span>\n        //     )\n        // },\n        {\n            title: 'Login',\n            dataIndex: 'login',\n            key: 'login',\n            render: (text, record) => {\n                if (typeof text != 'string') {\n                    const arr = Object.values(record.login);\n                    return (\n                        <span>\n                            {(() => {\n                                // console.log('IIFE - render');\n                                let color = 'green';\n                                return (\n                                    <Tag color={color} key=\"1\">\n                                        {record.login.username}\n                                    </Tag>\n                                );\n                            })()}\n                        </span>\n                    );\n                }\n            }\n        },\n        {\n            title: 'Dob',\n            dataIndex: 'dob',\n            key: 'dob',\n            render: (text, record) => {\n                if (typeof text != 'string') {\n                    const arr = Object.values(record.dob);\n                    return (\n                        <span>\n                            {arr.map((tag) => {\n                                let color = tag.length > 5 ? 'geekblue' : 'green';\n                                if (tag === 'loser') {\n                                    color = 'volcano';\n                                }\n                                return (\n                                    <Tag color={color} key={tag}>\n                                        {tag}\n                                    </Tag>\n                                );\n                            })}\n                        </span>\n                    );\n                }\n            }\n        },\n        {\n            title: 'Registered',\n            dataIndex: 'registered',\n            key: 'registered',\n            render: (text, record) => {\n                if (typeof text != 'string') {\n                    const arr = Object.values(record.registered);\n                    return (\n                        <span>\n                            {arr.map((tag) => {\n                                let color = tag.length > 5 ? 'geekblue' : 'green';\n                                if (tag === 'loser') {\n                                    color = 'volcano';\n                                }\n                                return (\n                                    <Tag color={color} key={tag}>\n                                        {tag}\n                                    </Tag>\n                                );\n                            })}\n                        </span>\n                    );\n                }\n            }\n        },\n        {\n            title: 'Action',\n            key: 'action',\n            fixed: 'right',\n            render: (text, record) => (\n                <Space size=\"middle\">\n                    <Button\n                        variant=\"contained\"\n                        color={'primary'}\n                        disableElevation\n                        style={{ width: 'auto', padding: '1vh', marginLeft: '3vh', color: '#7ffff9', background: '#21086d' }}\n                        endIcon={<SaveIcon />}\n                        onClick={() => handleEdit(record.key)}\n                    >\n                        Editar\n                    </Button>\n                    <AlertDialog kind=\"primary\" record={record}>\n                        Delete\n                    </AlertDialog>\n                </Space>\n            )\n        }\n    ];\n\n    //\n\n    const handleEdit = async (id) => {\n        console.log('handleEdit: ', id);\n        window.location.href = '#' + id;\n        window.location.reload(true);\n    };\n\n    return (\n        <>\n            {data && (\n                <div className=\"books\">\n                    <Table\n                        columns={columns}\n                        dataSource={data}\n                        pagination={{\n                            pageSize: 50,\n                            defaultPageSize: 50,\n                            showSizeChanger: false,\n                            pageSizeOptions: ['10', '20', '30'],\n                            position: ['topRight', 'bottomRight']\n                        }}\n                        scroll={{ y: 240 }}\n                    />\n                    {/* loop over the books */}\n                    {/* {pacients.map((item, index) => (\n                            <div key={index}>\n                                <h2>{item.name}</h2>\n                            </div>\n                        ))} */}\n                </div>\n            )}\n            {/* {data && (\n                <div className=\"books\">\n                    <Table\n                        columns={columns}\n                        dataSource={data}\n                        scroll={{ x: 1500 }}\n                        summary={(pageData) => (\n                            <Table.Summary fixed={fixedTop ? 'top' : 'bottom'}>\n                                <Table.Summary.Row>\n                                    <Table.Summary.Cell index={0} colSpan={2}>\n                                        <Switch\n                                            checkedChildren=\"Fixed Top\"\n                                            unCheckedChildren=\"Fixed Top\"\n                                            checked={fixedTop}\n                                            onChange={() => {\n                                                setFixedTop(!fixedTop);\n                                            }}\n                                        />\n                                    </Table.Summary.Cell>\n                                    <Table.Summary.Cell index={2} colSpan={8}>\n                                        Scroll Context\n                                    </Table.Summary.Cell>\n                                    <Table.Summary.Cell index={10}>Fix Right</Table.Summary.Cell>\n                                </Table.Summary.Row>\n                            </Table.Summary>\n                        )}\n                        sticky\n                    />\n                </div>\n            )} */}\n        </>\n    );\n}\n\n// #\n// #\n// #\n// #\n\n// https://www.npmjs.com/package/antd-schema-form\n\nimport SchemaForm from 'antd-schema-form'; // getValueFromObject // The value of the form obtained from the form, formatted into an object // getObjectFromValue, // Object formatted into the value required by the form // getKeysFromObject, // Get all the keys under schema.json\nimport 'antd-schema-form/style/antd-schema-form.css'; //\n\nexport function AntdSchemaForm(props) {\n    const { ...other } = props;\n\n    const formRef = useRef();\n\n    // form json schema\n    const json = {\n        id: '$root',\n        type: 'object',\n        title: 'Form',\n        description: 'Form preview.',\n        properties: {\n            name: {\n                id: '$root/properties/name',\n                type: 'object',\n                title: 'Name',\n                description: '👾️',\n                properties: {\n                    title: {\n                        id: '$root/properties/name/properties/title',\n                        type: 'string',\n                        title: 'Title',\n                        $tableRender: 'custom',\n                        $required: true\n                    },\n                    first: {\n                        id: '$root/properties/name/properties/first',\n                        type: 'string',\n                        title: 'First',\n                        $tableRender: 'custom'\n                    },\n                    last: {\n                        id: '$root/properties/name/properties/last',\n                        type: 'string',\n                        title: 'Last',\n                        $tableRender: 'custom'\n                    }\n                }\n            },\n            nat: {\n                id: '$root/properties/nat',\n                type: 'string',\n                title: 'Nat',\n                description: '2',\n                $required: true\n            },\n            cel: {\n                id: '$root/properties/cel',\n                type: 'string',\n                title: 'Cel',\n                description: 'Please type in your Cel.',\n                $required: true\n            },\n            phone: {\n                id: '$root/properties/phone',\n                type: 'string',\n                title: 'Phone',\n                description: 'Please type in your Phone.',\n                $required: true\n            },\n            cell: {\n                id: '$root/properties/cell',\n                type: 'string',\n                title: 'Cell',\n                description: 'Please type in your Cell.',\n                $required: true\n            },\n            email: {\n                id: '$root/properties/email',\n                type: 'string',\n                title: 'e-mail',\n                description: 'Please type in your e-mail.',\n                $required: true\n            },\n            gender: {\n                id: '$root/properties/gender',\n                type: 'string',\n                title: 'Gender',\n                description: '🐵️',\n                $componentType: 'radio',\n                $options: [\n                    {\n                        label: 'Male',\n                        value: 'Male'\n                    },\n                    {\n                        label: 'Female',\n                        value: 'Female'\n                    }\n                ]\n            },\n            dob: {\n                id: '$root/properties/dob',\n                type: 'object',\n                title: 'DOB',\n                description: '🎉️',\n                properties: {\n                    date: {\n                        id: '$root/properties/dob/properties/date',\n                        type: 'string',\n                        title: 'Date',\n                        $tableRender: 'custom',\n                        $required: true\n                    },\n                    age: {\n                        id: '$root/properties/dob/properties/age',\n                        type: 'string',\n                        title: 'Age',\n                        $tableRender: 'custom',\n                        $required: true\n                    }\n                }\n            },\n            registered: {\n                id: '$root/properties/registered',\n                type: 'object',\n                title: 'Registered',\n                description: '🎉️',\n                properties: {\n                    date: {\n                        id: '$root/properties/registered/properties/date',\n                        type: 'string',\n                        title: 'Date',\n                        $tableRender: 'custom',\n                        $required: true\n                    },\n                    age: {\n                        id: '$root/properties/registered/properties/age',\n                        type: 'string',\n                        title: 'Age',\n                        $tableRender: 'custom',\n                        $required: true\n                    }\n                }\n            },\n            location: {\n                id: '$root/properties/location',\n                type: 'object',\n                title: 'Location',\n                description: '🏡️',\n                properties: {\n                    street: {\n                        id: '$root/properties/location/properties/street'\n                    },\n                    name: {\n                        id: '$root/properties/location/properties/street/properties/name',\n                        type: 'string',\n                        title: 'Name',\n                        $tableRender: 'custom'\n                    },\n                    number: {\n                        id: '$root/properties/location/properties/street/properties/number',\n                        type: 'string',\n                        title: 'Number',\n                        $tableRender: 'custom'\n                    },\n                    city: {\n                        id: '$root/properties/location/properties/city',\n                        type: 'string',\n                        title: 'City',\n                        $tableRender: 'custom'\n                    },\n                    state: {\n                        id: '$root/properties/location/properties/state',\n                        type: 'string',\n                        title: 'State',\n                        $tableRender: 'custom'\n                    },\n                    country: {\n                        id: '$root/properties/location/properties/country',\n                        type: 'string',\n                        title: 'Country',\n                        $tableRender: 'custom'\n                    },\n                    postcode: {\n                        id: '$root/properties/location/properties/postcode',\n                        type: 'string',\n                        title: 'Postcode',\n                        $tableRender: 'custom'\n                    },\n                    coordinates: {\n                        id: '$root/properties/location/properties/coordinates'\n                    },\n                    latitude: {\n                        id: '$root/properties/location/properties/coordinates/properties/latitude',\n                        type: 'string',\n                        title: 'Latitude',\n                        $tableRender: 'custom',\n                        $required: true\n                    },\n                    longitude: {\n                        id: '$root/properties/location/properties/coordinates/properties/longitude',\n                        type: 'string',\n                        title: 'Longitude',\n                        $tableRender: 'custom',\n                        $required: true\n                    },\n                     timezone: {\n                        id: '$root/properties/location/properties/timezone'\n                    },\n                    offset: {\n                        id: '$root/properties/location/properties/timezone/properties/offset',\n                        type: 'string',\n                        title: 'Offset',\n                        $tableRender: 'custom',\n                        $required: true\n                    },\n                    description: {\n                        id: '$root/properties/location/properties/timezone/properties/description',\n                        type: 'string',\n                        title: 'Description',\n                        $tableRender: 'custom',\n                        $required: true\n                    }\n                }\n            },\n            login: {\n                id: '$root/properties/login',\n                type: 'object',\n                title: 'Login',\n                description: '🛡️',\n                properties: {\n                    uuid: {\n                        id: '$root/properties/login/properties/uuid',\n                        type: 'string',\n                        title: 'UUID',\n                        $tableRender: 'custom'\n                    },\n                    username: {\n                        id: '$root/properties/login/properties/username',\n                        type: 'string',\n                        title: 'Username',\n                        $tableRender: 'custom'\n                    },\n                    password: {\n                        id: '$root/properties/login/properties/password',\n                        type: 'string',\n                        title: 'Password',\n                        $tableRender: 'custom'\n                    },\n                    salt: {\n                        id: '$root/properties/login/properties/salt',\n                        type: 'string',\n                        title: 'Salt',\n                        $tableRender: 'custom'\n                    },\n                    md5: {\n                        id: '$root/properties/login/properties/md5',\n                        type: 'string',\n                        title: 'MD5',\n                        $tableRender: 'custom'\n                    },\n                    sha1: {\n                        id: '$root/properties/login/properties/sha1',\n                        type: 'string',\n                        title: 'Sha1',\n                        $tableRender: 'custom'\n                    },\n                    sha256: {\n                        id: '$root/properties/login/properties/sha256',\n                        type: 'string',\n                        title: 'Sha256',\n                        $tableRender: 'custom'\n                    }\n                }\n            },\n            picture: {\n                id: '$root/properties/picture',\n                type: 'object',\n                title: 'Picture',\n                description: '🛡️',\n                properties: {\n                    large: {\n                        id: '$root/properties/picture/properties/large',\n                        type: 'string',\n                        title: 'Large',\n                        $tableRender: 'custom'\n                    },\n                    medium: {\n                        id: '$root/properties/picture/properties/medium',\n                        type: 'string',\n                        title: 'Medium',\n                        $tableRender: 'custom'\n                    },\n                    thumbnail: {\n                        id: '$root/properties/picture/properties/thumbnail',\n                        type: 'string',\n                        title: 'Thumbnail',\n                        $tableRender: 'custom'\n                    }\n                }\n            }\n            // schools: {\n            //     id: '$root/properties/schools',\n            //     type: 'array',\n            //     title: 'Educational experience',\n            //     description: 'Educational experience.',\n            //     items: {\n            //         id: '$root/properties/schools/items',\n            //         type: 'string',\n            //         title: 'Institution',\n            //         description: 'Please fill in the school.',\n            //         $required: true\n            //     }\n            // }\n        }\n    };\n\n    const value = {\n        $root: {\n            string: {\n                default: 'abcdefg',\n                cel: '12345',\n                phone: '12345'\n            },\n            number: {\n                default: 12345,\n                cel: 12345,\n                phone: 12345\n            },\n            array: {\n                default: [\n                    {\n                        col1: '数据1',\n                        col2: 1,\n                        col3: true\n                    },\n                    {\n                        col1: '数据2',\n                        col2: 2,\n                        col3: false\n                    },\n                    {\n                        cel: '数据1',\n                        phone: 1,\n                        col3: true\n                    }\n                ]\n            }\n        }\n    };\n\n    const handleOkSubmit = async (form, val, keys) => {\n        console.log('handleOkSubmit');\n        // console.log('form: ', form);\n        // console.log('val: ', val);\n        // console.log('keys: ', keys);\n        var collection = val.$root;\n        console.log('collection: ', collection);\n        var url = process.env.REACT_APP_API_URL + '/users/';\n        if (1 == 2) {\n            var url = url + key;\n        }\n        console.log(`url: ${url}`);\n        const results = await fetch(url, {\n            method: 'POST',\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(collection)\n        })\n            .then((res) => {\n                var results = res;\n                console.log('results: ', results);\n                return results;\n            })\n            .then((res) => {\n                var results = res.results;\n                console.log('results: ', results);\n                return results;\n            })\n            .catch((e) => {\n                console.log('err: ', e.message);\n            });\n\n        console.log('results: ', results);\n    };\n\n    const handleCancelClick = () => {\n        console.log('handleCancelClick');\n    };\n\n    // 自定义组件\n    const customComponent = {\n        custom(item, form, required) {\n            return <Input placeholder=\"自定义组件\" required={required} addonAfter={<IconSettingFilled />} />;\n        }\n    };\n\n    // 自定义表格渲染\n    const customTableRender = {\n        red(text, record, index, item, form) {\n            return <span style={{ color: '#f00' }}>{text}</span>;\n        },\n        green(text, record, index, item, form) {\n            return <span style={{ color: '#0f0' }}>{text}</span>;\n        }\n    };\n\n    return (\n        <SchemaForm\n            ref={formRef}\n            json={json}\n            value={value}\n            customComponent={customComponent}\n            customTableRender={customTableRender}\n            okText=\"Enviar\"\n            onOk={handleOkSubmit}\n            onCancel={handleCancelClick}\n        />\n    );\n}\n\n// #\n// #\n// #\n// #\n\nimport React, { useRef, useState, useEffect } from 'react';\n\n// material-ui\nimport { Typography } from '@material-ui/core';\n\n// project imports\nimport MainCard from '../../ui-component/cards/MainCard';\n\n//==============================|| App PAGE ||==============================//\n\nconst App = () => {\n    console.log('window.location.hash: ', window.location.hash);\n\n    return (\n        <>\n            <MainCard title=\"Escopo\">\n                <Typography variant=\"body2\">\n                    <a href=\"https://github.com/mozgbrasil/node-labs/blob/develop/README_findup.md#findup\">\n                        https://github.com/mozgbrasil/node-labs/blob/develop/README_findup.md#findup\n                    </a>\n                </Typography>\n                <SimpleSnackbar />\n            </MainCard>\n            <MainCard title=\"Grade de Dados\">\n                <AntdSchemaTable />\n            </MainCard>\n            <MainCard title=\"Formulário\">\n                <AntdSchemaForm />\n            </MainCard>\n        </>\n    );\n};\n\nexport default App;\n"],"sourceRoot":""}