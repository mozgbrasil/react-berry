{"version":3,"sources":["ui-component/cards/Skeleton/EarningCard.js","assets/images/icons/earning.svg","views/dashboard/Default/EarningCard.js","views/dashboard/Default/chart-data/bajaj-area-chart.js","views/dashboard/Default/BajajAreaChartCard.js","ui-component/cards/Skeleton/PopularCard.js","views/dashboard/Default/PopularCard.js","views/dashboard/Default/chart-data/total-order-month-line-chart.js","views/dashboard/Default/chart-data/total-order-year-line-chart.js","views/dashboard/Default/TotalOrderLineChartCard.js","ui-component/cards/Skeleton/TotalIncomeCard.js","views/dashboard/Default/TotalIncomeDarkCard.js","views/dashboard/Default/TotalIncomeLightCard.js","ui-component/cards/Skeleton/TotalGrowthBarChart.js","views/dashboard/Default/chart-data/total-growth-bar-chart.js","views/dashboard/Default/TotalGrowthBarChart.js","views/dashboard/Default/index.js"],"names":["useStyles","makeStyles","cardHeading","marginRight","marginTop","marginBottom","EarningCard","classes","Card","CardContent","Grid","container","direction","item","justifyContent","Skeleton","variant","width","height","className","theme","card","backgroundColor","palette","secondary","dark","color","overflow","position","content","background","borderRadius","top","right","breakpoints","down","opacity","padding","avatar","typography","commonAvatar","largeAvatar","avatarRight","mediumAvatar","zIndex","fontSize","fontWeight","subHeading","avatarCircle","cursor","smallAvatar","circleIcon","transform","menuItem","isLoading","React","useState","anchorEl","setAnchorEl","handleClose","Fragment","MainCard","border","contentClass","Avatar","src","EarningIcon","alt","aria-controls","aria-haspopup","onClick","event","currentTarget","Menu","id","keepMounted","open","Boolean","onClose","anchorOrigin","vertical","horizontal","transformOrigin","MenuItem","alignItems","Typography","sx","mb","chartData","type","options","chart","sparkline","enabled","dataLabels","stroke","curve","tooltip","fixed","x","show","y","title","formatter","seriesName","marker","series","data","light","contentContainer","paddingBottom","fontStyle","BajajAreaChartCard","useTheme","orangeDark","useEffect","newSupportChart","colors","ApexCharts","exec","xs","grey","cardAction","display","paddingTop","PopularCard","spacing","gridSpacing","zeroMinWidth","primaryLight","primary","divider","avatarSuccess","success","marginLeft","successDark","avatarError","orange","errorDark","alignContent","pt","Divider","CardActions","Button","size","disableElevation","fill","yaxis","min","max","name","TotalOrderLineChartCard","timeValue","setTimeValue","handleChangeTime","newValue","e","ChartDataMonth","ChartDataYear","TotalIncomeCard","List","ListItem","disableGutters","ListItemAvatar","ListItemText","TotalIncomeDarkCard","mt","warning","TotalIncomeLightCard","TotalGrowthBarChart","stacked","toolbar","zoom","responsive","breakpoint","legend","offsetX","offsetY","plotOptions","bar","columnWidth","xaxis","categories","fontFamily","labels","useSeriesColors","markers","radius","itemMargin","grid","status","value","label","setValue","text","grey200","primary200","primaryDark","secondaryMain","main","secondaryLight","grey500","newChartData","style","borderColor","TextField","select","onChange","target","map","option","Dashboard","setLoading","lg","md","sm"],"mappings":"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","file":"static/js/12.9a1ba880.chunk.js","sourcesContent":["import React from 'react';\n\n// material-ui\nimport { makeStyles } from '@material-ui/styles';\nimport { Card, CardContent, Grid, Skeleton } from '@material-ui/core';\n\n// style constant\nconst useStyles = makeStyles({\n    cardHeading: {\n        marginRight: '8px',\n        marginTop: '18px',\n        marginBottom: '14px'\n    }\n});\n\n//-----------------------|| SKELETON EARNING CARD ||-----------------------//\n\nconst EarningCard = () => {\n    const classes = useStyles();\n    return (\n        <Card>\n            <CardContent>\n                <Grid container direction=\"column\">\n                    <Grid item>\n                        <Grid container justifyContent=\"space-between\">\n                            <Grid item>\n                                <Skeleton variant=\"rect\" width={44} height={44} />\n                            </Grid>\n                            <Grid item>\n                                <Skeleton variant=\"rect\" width={34} height={34} />\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <Grid item>\n                        <Skeleton variant=\"rect\" className={classes.cardHeading} height={40} />\n                    </Grid>\n                    <Grid item>\n                        <Skeleton variant=\"rect\" height={30} />\n                    </Grid>\n                </Grid>\n            </CardContent>\n        </Card>\n    );\n};\n\nexport default EarningCard;\n","export default __webpack_public_path__ + \"static/media/earning.b019e86a.svg\";","import PropTypes from 'prop-types';\nimport React from 'react';\n\n// material-ui\nimport { makeStyles } from '@material-ui/styles';\nimport { Avatar, Grid, Menu, MenuItem, Typography } from '@material-ui/core';\n\n// project imports\nimport MainCard from './../../../ui-component/cards/MainCard';\nimport SkeletonEarningCard from './../../../ui-component/cards/Skeleton/EarningCard';\n\n// assets\nimport EarningIcon from './../../../assets/images/icons/earning.svg';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport GetAppTwoToneIcon from '@material-ui/icons/GetAppOutlined';\nimport FileCopyTwoToneIcon from '@material-ui/icons/FileCopyOutlined';\nimport PictureAsPdfTwoToneIcon from '@material-ui/icons/PictureAsPdfOutlined';\nimport ArchiveTwoToneIcon from '@material-ui/icons/ArchiveOutlined';\n\n// style constant\nconst useStyles = makeStyles((theme) => ({\n    card: {\n        backgroundColor: theme.palette.secondary.dark,\n        color: '#fff',\n        overflow: 'hidden',\n        position: 'relative',\n        '&:after': {\n            content: '\"\"',\n            position: 'absolute',\n            width: '210px',\n            height: '210px',\n            background: theme.palette.secondary[800],\n            borderRadius: '50%',\n            top: '-85px',\n            right: '-95px',\n            [theme.breakpoints.down('xs')]: {\n                top: '-105px',\n                right: '-140px'\n            }\n        },\n        '&:before': {\n            content: '\"\"',\n            position: 'absolute',\n            width: '210px',\n            height: '210px',\n            background: theme.palette.secondary[800],\n            borderRadius: '50%',\n            top: '-125px',\n            right: '-15px',\n            opacity: 0.5,\n            [theme.breakpoints.down('xs')]: {\n                top: '-155px',\n                right: '-70px'\n            }\n        }\n    },\n    content: {\n        padding: '20px !important'\n    },\n    avatar: {\n        ...theme.typography.commonAvatar,\n        ...theme.typography.largeAvatar,\n        backgroundColor: theme.palette.secondary[800],\n        marginTop: '8px'\n    },\n    avatarRight: {\n        ...theme.typography.commonAvatar,\n        ...theme.typography.mediumAvatar,\n        backgroundColor: theme.palette.secondary.dark,\n        color: theme.palette.secondary[200],\n        zIndex: 1\n    },\n    cardHeading: {\n        fontSize: '2.125rem',\n        fontWeight: 500,\n        marginRight: '8px',\n        marginTop: '14px',\n        marginBottom: '6px'\n    },\n    subHeading: {\n        fontSize: '1rem',\n        fontWeight: 500,\n        color: theme.palette.secondary[200]\n    },\n    avatarCircle: {\n        cursor: 'pointer',\n        ...theme.typography.smallAvatar,\n        backgroundColor: theme.palette.secondary[200],\n        color: theme.palette.secondary.dark\n    },\n    circleIcon: {\n        transform: 'rotate3d(1, 1, 1, 45deg)'\n    },\n    menuItem: {\n        marginRight: '14px',\n        fontSize: '1.25rem'\n    }\n}));\n\n//===========================|| DASHBOARD DEFAULT - EARNING CARD ||===========================//\n\nconst EarningCard = ({ isLoading }) => {\n    const classes = useStyles();\n\n    const [anchorEl, setAnchorEl] = React.useState(null);\n\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    return (\n        <React.Fragment>\n            {isLoading ? (\n                <SkeletonEarningCard />\n            ) : (\n                <MainCard border={false} className={classes.card} contentClass={classes.content}>\n                    <Grid container direction=\"column\">\n                        <Grid item>\n                            <Grid container justifyContent=\"space-between\">\n                                <Grid item>\n                                    <Avatar variant=\"rounded\" className={classes.avatar}>\n                                        <img src={EarningIcon} alt=\"Notification\" />\n                                    </Avatar>\n                                </Grid>\n                                <Grid item>\n                                    <Avatar\n                                        variant=\"rounded\"\n                                        className={classes.avatarRight}\n                                        aria-controls=\"menu-earning-card\"\n                                        aria-haspopup=\"true\"\n                                        onClick={handleClick}\n                                    >\n                                        <MoreHorizIcon fontSize=\"inherit\" />\n                                    </Avatar>\n                                    <Menu\n                                        id=\"menu-earning-card\"\n                                        anchorEl={anchorEl}\n                                        keepMounted\n                                        open={Boolean(anchorEl)}\n                                        onClose={handleClose}\n                                        variant=\"selectedMenu\"\n                                        anchorOrigin={{\n                                            vertical: 'bottom',\n                                            horizontal: 'right'\n                                        }}\n                                        transformOrigin={{\n                                            vertical: 'top',\n                                            horizontal: 'right'\n                                        }}\n                                    >\n                                        <MenuItem onClick={handleClose}>\n                                            <GetAppTwoToneIcon fontSize=\"inherit\" className={classes.menuItem} /> Import Card\n                                        </MenuItem>\n                                        <MenuItem onClick={handleClose}>\n                                            <FileCopyTwoToneIcon fontSize=\"inherit\" className={classes.menuItem} /> Copy Data\n                                        </MenuItem>\n                                        <MenuItem onClick={handleClose}>\n                                            <PictureAsPdfTwoToneIcon fontSize=\"inherit\" className={classes.menuItem} /> Export\n                                        </MenuItem>\n                                        <MenuItem onClick={handleClose}>\n                                            <ArchiveTwoToneIcon fontSize=\"inherit\" className={classes.menuItem} /> Archive File\n                                        </MenuItem>\n                                    </Menu>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                        <Grid item>\n                            <Grid container alignItems=\"center\">\n                                <Grid item>\n                                    <Typography className={classes.cardHeading}>$500.00</Typography>\n                                </Grid>\n                                <Grid item>\n                                    <Avatar className={classes.avatarCircle}>\n                                        <ArrowUpwardIcon fontSize=\"inherit\" className={classes.circleIcon} />\n                                    </Avatar>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                        <Grid item sx={{ mb: 1.25 }}>\n                            <Typography className={classes.subHeading}>Total Earning</Typography>\n                        </Grid>\n                    </Grid>\n                </MainCard>\n            )}\n        </React.Fragment>\n    );\n};\n\nEarningCard.propTypes = {\n    isLoading: PropTypes.bool\n};\n\nexport default EarningCard;\n","//-----------------------|| DASHBOARD - BAJAJ AREA CHART ||-----------------------//\n\nconst chartData = {\n    type: 'area',\n    height: 95,\n    options: {\n        chart: {\n            id: 'support-chart',\n            sparkline: {\n                enabled: true\n            }\n        },\n        dataLabels: {\n            enabled: false\n        },\n        stroke: {\n            curve: 'smooth',\n            width: 1\n        },\n        tooltip: {\n            fixed: {\n                enabled: false\n            },\n            x: {\n                show: false\n            },\n            y: {\n                title: {\n                    formatter: (seriesName) => 'Ticket '\n                }\n            },\n            marker: {\n                show: false\n            }\n        }\n    },\n    series: [\n        {\n            data: [0, 15, 10, 50, 30, 40, 25]\n        }\n    ]\n};\n\nexport default chartData;\n","import React from 'react';\n\n// material-ui\nimport { makeStyles, useTheme } from '@material-ui/styles';\nimport { Card, CardContent, Grid, Typography } from '@material-ui/core';\n\n// third-party\nimport ApexCharts from 'apexcharts';\nimport Chart from 'react-apexcharts';\n\n// project imports\nimport chartData from './chart-data/bajaj-area-chart';\n\n// style constant\nconst useStyles = makeStyles((theme) => ({\n    card: {\n        backgroundColor: theme.palette.secondary.light\n    },\n    content: {\n        padding: '0px !important'\n    },\n    contentContainer: {\n        padding: '16px',\n        paddingBottom: 0,\n        color: '#fff'\n    },\n    fontStyle: {\n        fontWeight: 400\n    }\n}));\n\n//===========================|| DASHBOARD DEFAULT - BAJAJ AREA CHART CARD ||===========================//\n\nconst BajajAreaChartCard = () => {\n    const classes = useStyles();\n    const theme = useTheme();\n\n    const orangeDark = theme.palette.secondary[800];\n\n    React.useEffect(() => {\n        const newSupportChart = {\n            ...chartData.options,\n            colors: [orangeDark],\n            tooltip: {\n                theme: 'light'\n            }\n        };\n        ApexCharts.exec(`support-chart`, 'updateOptions', newSupportChart);\n    }, [orangeDark]);\n\n    return (\n        <Card className={classes.card}>\n            <CardContent className={classes.content}>\n                <Grid container className={classes.contentContainer}>\n                    <Grid item xs={12}>\n                        <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n                            <Grid item>\n                                <Typography variant=\"subtitle1\" sx={{ color: theme.palette.secondary.dark }}>\n                                    Bajaj Finery\n                                </Typography>\n                            </Grid>\n                            <Grid item>\n                                <Typography variant=\"h4\" sx={{ color: theme.palette.grey[800] }}>\n                                    $1839.00\n                                </Typography>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Typography variant=\"subtitle2\" sx={{ color: theme.palette.grey[800] }}>\n                            10% Profit\n                        </Typography>\n                    </Grid>\n                </Grid>\n                <Chart {...chartData} />\n            </CardContent>\n        </Card>\n    );\n};\n\nexport default BajajAreaChartCard;\n","import React from 'react';\n// material-ui\nimport { makeStyles } from '@material-ui/styles';\nimport { Card, CardContent, Grid, Skeleton } from '@material-ui/core';\n\n// project imports\nimport { gridSpacing } from './../../../store/constant';\n\n// style constant\nconst useStyles = makeStyles({\n    cardAction: {\n        padding: '10px',\n        display: 'flex',\n        paddingTop: 0,\n        justifyContent: 'center'\n    }\n});\n\n//-----------------------|| SKELETON - POPULAR CARD ||-----------------------//\n\nconst PopularCard = () => {\n    const classes = useStyles();\n    return (\n        <Card>\n            <CardContent>\n                <Grid container spacing={gridSpacing}>\n                    <Grid item xs={12}>\n                        <Grid container alignItems=\"center\" justifyContent=\"space-between\" spacing={gridSpacing}>\n                            <Grid item xs zeroMinWidth>\n                                <Skeleton variant=\"rect\" height={20} />\n                            </Grid>\n                            <Grid item>\n                                <Skeleton variant=\"rect\" height={20} width={20} />\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Skeleton variant=\"rect\" height={150} />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Grid container spacing={1}>\n                            <Grid item xs={12}>\n                                <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\n                                    <Grid item xs={6}>\n                                        <Skeleton variant=\"rect\" height={20} />\n                                    </Grid>\n                                    <Grid item xs={6}>\n                                        <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\n                                            <Grid item xs zeroMinWidth>\n                                                <Skeleton variant=\"rect\" height={20} />\n                                            </Grid>\n                                            <Grid item>\n                                                <Skeleton variant=\"rect\" height={16} width={16} />\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                            <Grid item xs={6}>\n                                <Skeleton variant=\"rect\" height={20} />\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Grid container spacing={1}>\n                            <Grid item xs={12}>\n                                <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\n                                    <Grid item xs={6}>\n                                        <Skeleton variant=\"rect\" height={20} />\n                                    </Grid>\n                                    <Grid item xs={6}>\n                                        <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\n                                            <Grid item xs zeroMinWidth>\n                                                <Skeleton variant=\"rect\" height={20} />\n                                            </Grid>\n                                            <Grid item>\n                                                <Skeleton variant=\"rect\" height={16} width={16} />\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                            <Grid item xs={6}>\n                                <Skeleton variant=\"rect\" height={20} />\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Grid container spacing={1}>\n                            <Grid item xs={12}>\n                                <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\n                                    <Grid item xs={6}>\n                                        <Skeleton variant=\"rect\" height={20} />\n                                    </Grid>\n                                    <Grid item xs={6}>\n                                        <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\n                                            <Grid item xs zeroMinWidth>\n                                                <Skeleton variant=\"rect\" height={20} />\n                                            </Grid>\n                                            <Grid item>\n                                                <Skeleton variant=\"rect\" height={16} width={16} />\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                            <Grid item xs={6}>\n                                <Skeleton variant=\"rect\" height={20} />\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Grid container spacing={1}>\n                            <Grid item xs={12}>\n                                <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\n                                    <Grid item xs={6}>\n                                        <Skeleton variant=\"rect\" height={20} />\n                                    </Grid>\n                                    <Grid item xs={6}>\n                                        <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\n                                            <Grid item xs zeroMinWidth>\n                                                <Skeleton variant=\"rect\" height={20} />\n                                            </Grid>\n                                            <Grid item>\n                                                <Skeleton variant=\"rect\" height={16} width={16} />\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                            <Grid item xs={6}>\n                                <Skeleton variant=\"rect\" height={20} />\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Grid container spacing={1}>\n                            <Grid item xs={12}>\n                                <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\n                                    <Grid item xs={6}>\n                                        <Skeleton variant=\"rect\" height={20} />\n                                    </Grid>\n                                    <Grid item xs={6}>\n                                        <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\n                                            <Grid item xs zeroMinWidth>\n                                                <Skeleton variant=\"rect\" height={20} />\n                                            </Grid>\n                                            <Grid item>\n                                                <Skeleton variant=\"rect\" height={16} width={16} />\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                            <Grid item xs={6}>\n                                <Skeleton variant=\"rect\" height={20} />\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </CardContent>\n            <CardContent className={classes.cardAction}>\n                <Skeleton variant=\"rect\" height={25} width={75} />\n            </CardContent>\n        </Card>\n    );\n};\n\nexport default PopularCard;\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\n// material-ui\nimport { makeStyles } from '@material-ui/styles';\nimport { Avatar, Button, CardActions, CardContent, Divider, Grid, Menu, MenuItem, Typography } from '@material-ui/core';\n\n// project imports\nimport BajajAreaChartCard from './BajajAreaChartCard';\nimport MainCard from './../../../ui-component/cards/MainCard';\nimport SkeletonPopularCard from './../../../ui-component/cards/Skeleton/PopularCard';\nimport { gridSpacing } from './../../../store/constant';\n\n// assets\nimport ChevronRightOutlinedIcon from '@material-ui/icons/ChevronRightOutlined';\nimport MoreHorizOutlinedIcon from '@material-ui/icons/MoreHorizOutlined';\nimport KeyboardArrowUpOutlinedIcon from '@material-ui/icons/KeyboardArrowUpOutlined';\nimport KeyboardArrowDownOutlinedIcon from '@material-ui/icons/KeyboardArrowDownOutlined';\n\n// style constant\nconst useStyles = makeStyles((theme) => ({\n    cardAction: {\n        padding: '10px',\n        paddingTop: 0,\n        justifyContent: 'center'\n    },\n    primaryLight: {\n        color: theme.palette.primary[200],\n        cursor: 'pointer'\n    },\n    divider: {\n        marginTop: '12px',\n        marginBottom: '12px'\n    },\n    avatarSuccess: {\n        width: '16px',\n        height: '16px',\n        borderRadius: '5px',\n        backgroundColor: theme.palette.success.light,\n        color: theme.palette.success.dark,\n        marginLeft: '15px'\n    },\n    successDark: {\n        color: theme.palette.success.dark\n    },\n    avatarError: {\n        width: '16px',\n        height: '16px',\n        borderRadius: '5px',\n        backgroundColor: theme.palette.orange.light,\n        color: theme.palette.orange.dark,\n        marginLeft: '15px'\n    },\n    errorDark: {\n        color: theme.palette.orange.dark\n    }\n}));\n\n//-----------------------|| DASHBOARD DEFAULT - POPULAR CARD ||-----------------------//\n\nconst PopularCard = ({ isLoading }) => {\n    const classes = useStyles();\n\n    const [anchorEl, setAnchorEl] = React.useState(null);\n\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    return (\n        <React.Fragment>\n            {isLoading ? (\n                <SkeletonPopularCard />\n            ) : (\n                <MainCard content={false}>\n                    <CardContent>\n                        <Grid container spacing={gridSpacing}>\n                            <Grid item xs={12}>\n                                <Grid container alignContent=\"center\" justifyContent=\"space-between\">\n                                    <Grid item>\n                                        <Typography variant=\"h4\">Popular Stocks</Typography>\n                                    </Grid>\n                                    <Grid item>\n                                        <MoreHorizOutlinedIcon\n                                            fontSize=\"small\"\n                                            className={classes.primaryLight}\n                                            aria-controls=\"menu-popular-card\"\n                                            aria-haspopup=\"true\"\n                                            onClick={handleClick}\n                                        />\n                                        <Menu\n                                            id=\"menu-popular-card\"\n                                            anchorEl={anchorEl}\n                                            keepMounted\n                                            open={Boolean(anchorEl)}\n                                            onClose={handleClose}\n                                            variant=\"selectedMenu\"\n                                            anchorOrigin={{\n                                                vertical: 'bottom',\n                                                horizontal: 'right'\n                                            }}\n                                            transformOrigin={{\n                                                vertical: 'top',\n                                                horizontal: 'right'\n                                            }}\n                                        >\n                                            <MenuItem onClick={handleClose}> Today</MenuItem>\n                                            <MenuItem onClick={handleClose}> This Month</MenuItem>\n                                            <MenuItem onClick={handleClose}> This Year </MenuItem>\n                                        </Menu>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                            <Grid item xs={12} sx={{ pt: '16px !important' }}>\n                                <BajajAreaChartCard />\n                            </Grid>\n                            <Grid item xs={12}>\n                                <Grid container direction=\"column\">\n                                    <Grid item>\n                                        <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n                                            <Grid item>\n                                                <Typography variant=\"subtitle1\" color=\"inherit\">\n                                                    Bajaj Finery\n                                                </Typography>\n                                            </Grid>\n                                            <Grid item>\n                                                <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n                                                    <Grid item>\n                                                        <Typography variant=\"subtitle1\" color=\"inherit\">\n                                                            $1839.00\n                                                        </Typography>\n                                                    </Grid>\n                                                    <Grid item>\n                                                        <Avatar variant=\"rounded\" className={classes.avatarSuccess}>\n                                                            <KeyboardArrowUpOutlinedIcon fontSize=\"small\" color=\"inherit\" />\n                                                        </Avatar>\n                                                    </Grid>\n                                                </Grid>\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                    <Grid item>\n                                        <Typography variant=\"subtitle2\" className={classes.successDark}>\n                                            10% Profit\n                                        </Typography>\n                                    </Grid>\n                                </Grid>\n                                <Divider className={classes.divider} />\n                                <Grid container direction=\"column\">\n                                    <Grid item>\n                                        <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n                                            <Grid item>\n                                                <Typography variant=\"subtitle1\" color=\"inherit\">\n                                                    TTML\n                                                </Typography>\n                                            </Grid>\n                                            <Grid item>\n                                                <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n                                                    <Grid item>\n                                                        <Typography variant=\"subtitle1\" color=\"inherit\">\n                                                            $100.00\n                                                        </Typography>\n                                                    </Grid>\n                                                    <Grid item>\n                                                        <Avatar variant=\"rounded\" className={classes.avatarError}>\n                                                            <KeyboardArrowDownOutlinedIcon fontSize=\"small\" color=\"inherit\" />\n                                                        </Avatar>\n                                                    </Grid>\n                                                </Grid>\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                    <Grid item>\n                                        <Typography variant=\"subtitle2\" className={classes.errorDark}>\n                                            10% loss\n                                        </Typography>\n                                    </Grid>\n                                </Grid>\n                                <Divider className={classes.divider} />\n                                <Grid container direction=\"column\">\n                                    <Grid item>\n                                        <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n                                            <Grid item>\n                                                <Typography variant=\"subtitle1\" color=\"inherit\">\n                                                    Reliance\n                                                </Typography>\n                                            </Grid>\n                                            <Grid item>\n                                                <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n                                                    <Grid item>\n                                                        <Typography variant=\"subtitle1\" color=\"inherit\">\n                                                            $200.00\n                                                        </Typography>\n                                                    </Grid>\n                                                    <Grid item>\n                                                        <Avatar variant=\"rounded\" className={classes.avatarSuccess}>\n                                                            <KeyboardArrowUpOutlinedIcon fontSize=\"small\" color=\"inherit\" />\n                                                        </Avatar>\n                                                    </Grid>\n                                                </Grid>\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                    <Grid item>\n                                        <Typography variant=\"subtitle2\" className={classes.successDark}>\n                                            10% Profit\n                                        </Typography>\n                                    </Grid>\n                                </Grid>\n                                <Divider className={classes.divider} />\n                                <Grid container direction=\"column\">\n                                    <Grid item>\n                                        <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n                                            <Grid item>\n                                                <Typography variant=\"subtitle1\" color=\"inherit\">\n                                                    TTML\n                                                </Typography>\n                                            </Grid>\n                                            <Grid item>\n                                                <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n                                                    <Grid item>\n                                                        <Typography variant=\"subtitle1\" color=\"inherit\">\n                                                            $189.00\n                                                        </Typography>\n                                                    </Grid>\n                                                    <Grid item>\n                                                        <Avatar variant=\"rounded\" className={classes.avatarError}>\n                                                            <KeyboardArrowDownOutlinedIcon fontSize=\"small\" color=\"inherit\" />\n                                                        </Avatar>\n                                                    </Grid>\n                                                </Grid>\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                    <Grid item>\n                                        <Typography variant=\"subtitle2\" className={classes.errorDark}>\n                                            10% loss\n                                        </Typography>\n                                    </Grid>\n                                </Grid>\n                                <Divider className={classes.divider} />\n                                <Grid container direction=\"column\">\n                                    <Grid item>\n                                        <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n                                            <Grid item>\n                                                <Typography variant=\"subtitle1\" color=\"inherit\">\n                                                    Stolon\n                                                </Typography>\n                                            </Grid>\n                                            <Grid item>\n                                                <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n                                                    <Grid item>\n                                                        <Typography variant=\"subtitle1\" color=\"inherit\">\n                                                            $189.00\n                                                        </Typography>\n                                                    </Grid>\n                                                    <Grid item>\n                                                        <Avatar variant=\"rounded\" className={classes.avatarError}>\n                                                            <KeyboardArrowDownOutlinedIcon fontSize=\"small\" color=\"inherit\" />\n                                                        </Avatar>\n                                                    </Grid>\n                                                </Grid>\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                    <Grid item>\n                                        <Typography variant=\"subtitle2\" className={classes.errorDark}>\n                                            10% loss\n                                        </Typography>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </CardContent>\n                    <CardActions className={classes.cardAction}>\n                        <Button size=\"small\" disableElevation>\n                            View All\n                            <ChevronRightOutlinedIcon />\n                        </Button>\n                    </CardActions>\n                </MainCard>\n            )}\n        </React.Fragment>\n    );\n};\n\nPopularCard.propTypes = {\n    isLoading: PropTypes.bool\n};\n\nexport default PopularCard;\n","//-----------------------|| DASHBOARD - TOTAL ORDER MONTH CHART ||-----------------------//\n\nconst chartData = {\n    type: 'line',\n    height: 90,\n    options: {\n        chart: {\n            sparkline: {\n                enabled: true\n            }\n        },\n        dataLabels: {\n            enabled: false\n        },\n        colors: ['#fff'],\n        fill: {\n            type: 'solid',\n            opacity: 1\n        },\n        stroke: {\n            curve: 'smooth',\n            width: 3\n        },\n        yaxis: {\n            min: 0,\n            max: 100\n        },\n        tooltip: {\n            theme: 'dark',\n            fixed: {\n                enabled: false\n            },\n            x: {\n                show: false\n            },\n            y: {\n                title: {\n                    formatter: (seriesName) => 'Total Order'\n                }\n            },\n            marker: {\n                show: false\n            }\n        }\n    },\n    series: [\n        {\n            name: 'series1',\n            data: [45, 66, 41, 89, 25, 44, 9, 54]\n        }\n    ]\n};\n\nexport default chartData;\n","//-----------------------|| DASHBOARD - TOTAL ORDER YEAR CHART ||-----------------------//\n\nconst chartData = {\n    type: 'line',\n    height: 90,\n    options: {\n        chart: {\n            sparkline: {\n                enabled: true\n            }\n        },\n        dataLabels: {\n            enabled: false\n        },\n        colors: ['#fff'],\n        fill: {\n            type: 'solid',\n            opacity: 1\n        },\n        stroke: {\n            curve: 'smooth',\n            width: 3\n        },\n        yaxis: {\n            min: 0,\n            max: 100\n        },\n        tooltip: {\n            theme: 'dark',\n            fixed: {\n                enabled: false\n            },\n            x: {\n                show: false\n            },\n            y: {\n                title: {\n                    formatter: (seriesName) => 'Total Order'\n                }\n            },\n            marker: {\n                show: false\n            }\n        }\n    },\n    series: [\n        {\n            name: 'series1',\n            data: [35, 44, 9, 54, 45, 66, 41, 69]\n        }\n    ]\n};\n\nexport default chartData;\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\n// material-ui\nimport { makeStyles } from '@material-ui/styles';\nimport { Avatar, Button, Grid, Typography } from '@material-ui/core';\n\n// third-party\nimport Chart from 'react-apexcharts';\n\n// project imports\nimport MainCard from './../../../ui-component/cards/MainCard';\nimport SkeletonTotalOrderCard from './../../../ui-component/cards/Skeleton/EarningCard';\n\nimport ChartDataMonth from './chart-data/total-order-month-line-chart';\nimport ChartDataYear from './chart-data/total-order-year-line-chart';\n\n// assets\nimport LocalMallOutlinedIcon from '@material-ui/icons/LocalMallOutlined';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\n\n// style constant\nconst useStyles = makeStyles((theme) => ({\n    card: {\n        backgroundColor: theme.palette.primary.dark,\n        color: '#fff',\n        overflow: 'hidden',\n        position: 'relative',\n        '&>div': {\n            position: 'relative',\n            zIndex: 5\n        },\n        '&:after': {\n            content: '\"\"',\n            position: 'absolute',\n            width: '210px',\n            height: '210px',\n            background: theme.palette.primary[800],\n            borderRadius: '50%',\n            zIndex: 1,\n            top: '-85px',\n            right: '-95px',\n            [theme.breakpoints.down('xs')]: {\n                top: '-105px',\n                right: '-140px'\n            }\n        },\n        '&:before': {\n            content: '\"\"',\n            position: 'absolute',\n            zIndex: 1,\n            width: '210px',\n            height: '210px',\n            background: theme.palette.primary[800],\n            borderRadius: '50%',\n            top: '-125px',\n            right: '-15px',\n            opacity: 0.5,\n            [theme.breakpoints.down('xs')]: {\n                top: '-155px',\n                right: '-70px'\n            }\n        }\n    },\n    content: {\n        padding: '20px !important'\n    },\n    avatar: {\n        ...theme.typography.commonAvatar,\n        ...theme.typography.largeAvatar,\n        backgroundColor: theme.palette.primary[800],\n        color: '#fff',\n        marginTop: '8px'\n    },\n    cardHeading: {\n        fontSize: '2.125rem',\n        fontWeight: 500,\n        marginRight: '8px',\n        marginTop: '14px',\n        marginBottom: '6px'\n    },\n    subHeading: {\n        fontSize: '1rem',\n        fontWeight: 500,\n        color: theme.palette.primary[200]\n    },\n    avatarCircle: {\n        ...theme.typography.smallAvatar,\n        cursor: 'pointer',\n        backgroundColor: theme.palette.primary[200],\n        color: theme.palette.primary.dark\n    },\n    circleIcon: {\n        transform: 'rotate3d(1, 1, 1, 45deg)'\n    }\n}));\n\n//-----------------------|| DASHBOARD - TOTAL ORDER LINE CHART CARD ||-----------------------//\n\nconst TotalOrderLineChartCard = ({ isLoading }) => {\n    const classes = useStyles();\n\n    const [timeValue, setTimeValue] = React.useState(false);\n    const handleChangeTime = (event, newValue) => {\n        setTimeValue(newValue);\n    };\n\n    return (\n        <React.Fragment>\n            {isLoading ? (\n                <SkeletonTotalOrderCard />\n            ) : (\n                <MainCard border={false} className={classes.card} contentClass={classes.content}>\n                    <Grid container direction=\"column\">\n                        <Grid item>\n                            <Grid container justifyContent=\"space-between\">\n                                <Grid item>\n                                    <Avatar variant=\"rounded\" className={classes.avatar}>\n                                        <LocalMallOutlinedIcon fontSize=\"inherit\" />\n                                    </Avatar>\n                                </Grid>\n                                <Grid item>\n                                    <Button\n                                        disableElevation\n                                        variant={timeValue ? 'contained' : 'string'}\n                                        size=\"small\"\n                                        onClick={(e) => handleChangeTime(e, true)}\n                                    >\n                                        Month\n                                    </Button>\n                                    <Button\n                                        disableElevation\n                                        variant={!timeValue ? 'contained' : 'string'}\n                                        size=\"small\"\n                                        onClick={(e) => handleChangeTime(e, false)}\n                                    >\n                                        Year\n                                    </Button>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                        <Grid item sx={{ mb: 0.75 }}>\n                            <Grid container alignItems=\"center\">\n                                <Grid item xs={6}>\n                                    <Grid container alignItems=\"center\">\n                                        <Grid item>\n                                            {timeValue ? (\n                                                <Typography className={classes.cardHeading}>$108</Typography>\n                                            ) : (\n                                                <Typography className={classes.cardHeading}>$961</Typography>\n                                            )}\n                                        </Grid>\n                                        <Grid item>\n                                            <Avatar className={classes.avatarCircle}>\n                                                <ArrowDownwardIcon fontSize=\"inherit\" className={classes.circleIcon} />\n                                            </Avatar>\n                                        </Grid>\n                                        <Grid item xs={12}>\n                                            <Typography className={classes.subHeading}>Total Order</Typography>\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                                <Grid item xs={6}>\n                                    {timeValue ? <Chart {...ChartDataMonth} /> : <Chart {...ChartDataYear} />}\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </MainCard>\n            )}\n        </React.Fragment>\n    );\n};\n\nTotalOrderLineChartCard.propTypes = {\n    isLoading: PropTypes.bool\n};\n\nexport default TotalOrderLineChartCard;\n","import React from 'react';\n\n// material-ui\nimport { makeStyles } from '@material-ui/styles';\nimport { Card, CardContent, List, ListItem, ListItemAvatar, ListItemText, Skeleton } from '@material-ui/core';\n\n// style constant\nconst useStyles = makeStyles({\n    content: {\n        padding: '16px !important'\n    },\n    padding: {\n        paddingTop: 0,\n        paddingBottom: 0\n    }\n});\n\n//-----------------------|| SKELETON - TOTAL INCOME DARK/LIGHT Card ||-----------------------//\n\nconst TotalIncomeCard = () => {\n    const classes = useStyles();\n    return (\n        <Card>\n            <CardContent className={classes.content}>\n                <List className={classes.padding}>\n                    <ListItem alignItems=\"center\" disableGutters className={classes.padding}>\n                        <ListItemAvatar>\n                            <Skeleton variant=\"rect\" width={44} height={44} />\n                        </ListItemAvatar>\n                        <ListItemText\n                            className={classes.padding}\n                            primary={<Skeleton variant=\"rect\" height={20} />}\n                            secondary={<Skeleton variant=\"text\" />}\n                        />\n                    </ListItem>\n                </List>\n            </CardContent>\n        </Card>\n    );\n};\n\nexport default TotalIncomeCard;\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\n// material-ui\nimport { makeStyles } from '@material-ui/styles';\nimport { Avatar, List, ListItem, ListItemAvatar, ListItemText, Typography } from '@material-ui/core';\n\n// project imports\nimport MainCard from './../../../ui-component/cards/MainCard';\nimport TotalIncomeCard from './../../../ui-component/cards/Skeleton/TotalIncomeCard';\n\n// assets\nimport TableChartOutlinedIcon from '@material-ui/icons/TableChartOutlined';\n\n// style constant\nconst useStyles = makeStyles((theme) => ({\n    card: {\n        backgroundColor: theme.palette.primary.dark,\n        color: theme.palette.primary.light,\n        overflow: 'hidden',\n        position: 'relative',\n        '&:after': {\n            content: '\"\"',\n            position: 'absolute',\n            width: '210px',\n            height: '210px',\n            background: 'linear-gradient(210.04deg, ' + theme.palette.primary[200] + ' -50.94%, rgba(144, 202, 249, 0) 83.49%)',\n            borderRadius: '50%',\n            top: '-30px',\n            right: '-180px'\n        },\n        '&:before': {\n            content: '\"\"',\n            position: 'absolute',\n            width: '210px',\n            height: '210px',\n            background: 'linear-gradient(140.9deg, ' + theme.palette.primary[200] + ' -14.02%, rgba(144, 202, 249, 0) 77.58%)',\n            borderRadius: '50%',\n            top: '-160px',\n            right: '-130px'\n        }\n    },\n    content: {\n        padding: '16px !important'\n    },\n    avatar: {\n        ...theme.typography.commonAvatar,\n        ...theme.typography.largeAvatar,\n        backgroundColor: theme.palette.primary[800],\n        color: '#fff'\n    },\n    primary: {\n        color: '#fff'\n    },\n    secondary: {\n        color: theme.palette.primary.light,\n        marginTop: '5px'\n    },\n    padding: {\n        paddingTop: 0,\n        paddingBottom: 0\n    }\n}));\n\n//-----------------------|| DASHBOARD - TOTAL INCOME DARK CARD ||-----------------------//\n\nconst TotalIncomeDarkCard = ({ isLoading }) => {\n    const classes = useStyles();\n\n    return (\n        <React.Fragment>\n            {isLoading ? (\n                <TotalIncomeCard />\n            ) : (\n                <MainCard border={false} className={classes.card} contentClass={classes.content}>\n                    <List className={classes.padding}>\n                        <ListItem alignItems=\"center\" disableGutters className={classes.padding}>\n                            <ListItemAvatar>\n                                <Avatar variant=\"rounded\" className={classes.avatar}>\n                                    <TableChartOutlinedIcon fontSize=\"inherit\" />\n                                </Avatar>\n                            </ListItemAvatar>\n                            <ListItemText\n                                className={classes.padding}\n                                sx={{\n                                    mt: 0.45,\n                                    mb: 0.45\n                                }}\n                                primary={\n                                    <Typography variant=\"h4\" className={classes.primary}>\n                                        $203k\n                                    </Typography>\n                                }\n                                secondary={\n                                    <Typography variant=\"subtitle2\" className={classes.secondary}>\n                                        Total Income\n                                    </Typography>\n                                }\n                            />\n                        </ListItem>\n                    </List>\n                </MainCard>\n            )}\n        </React.Fragment>\n    );\n};\n\nTotalIncomeDarkCard.propTypes = {\n    isLoading: PropTypes.bool\n};\n\nexport default TotalIncomeDarkCard;\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\n// material-ui\nimport { makeStyles } from '@material-ui/styles';\nimport { Avatar, List, ListItem, ListItemAvatar, ListItemText, Typography } from '@material-ui/core';\n\n// project imports\nimport MainCard from './../../../ui-component/cards/MainCard';\nimport TotalIncomeCard from './../../../ui-component/cards/Skeleton/TotalIncomeCard';\n\n// assets\nimport StorefrontTwoToneIcon from '@material-ui/icons/StorefrontTwoTone';\n\n// style constant\nconst useStyles = makeStyles((theme) => ({\n    card: {\n        overflow: 'hidden',\n        position: 'relative',\n        '&:after': {\n            content: '\"\"',\n            position: 'absolute',\n            width: '210px',\n            height: '210px',\n            background: 'linear-gradient(210.04deg, ' + theme.palette.warning.dark + ' -50.94%, rgba(144, 202, 249, 0) 83.49%)',\n            borderRadius: '50%',\n            top: '-30px',\n            right: '-180px'\n        },\n        '&:before': {\n            content: '\"\"',\n            position: 'absolute',\n            width: '210px',\n            height: '210px',\n            background: 'linear-gradient(140.9deg, ' + theme.palette.warning.dark + ' -14.02%, rgba(144, 202, 249, 0) 70.50%)',\n            borderRadius: '50%',\n            top: '-160px',\n            right: '-130px'\n        }\n    },\n    content: {\n        padding: '16px !important'\n    },\n    avatar: {\n        ...theme.typography.commonAvatar,\n        ...theme.typography.largeAvatar,\n        backgroundColor: theme.palette.warning.light,\n        color: theme.palette.warning.dark\n    },\n    secondary: {\n        color: theme.palette.grey[500],\n        marginTop: '5px'\n    },\n    padding: {\n        paddingTop: 0,\n        paddingBottom: 0\n    }\n}));\n\n//-----------------------|| DASHBOARD - TOTAL INCOME LIGHT CARD ||-----------------------//\n\nconst TotalIncomeLightCard = ({ isLoading }) => {\n    const classes = useStyles();\n\n    return (\n        <React.Fragment>\n            {isLoading ? (\n                <TotalIncomeCard />\n            ) : (\n                <MainCard className={classes.card} contentClass={classes.content}>\n                    <List className={classes.padding}>\n                        <ListItem alignItems=\"center\" disableGutters className={classes.padding}>\n                            <ListItemAvatar>\n                                <Avatar variant=\"rounded\" className={classes.avatar}>\n                                    <StorefrontTwoToneIcon fontSize=\"inherit\" />\n                                </Avatar>\n                            </ListItemAvatar>\n                            <ListItemText\n                                sx={{\n                                    mt: 0.45,\n                                    mb: 0.45\n                                }}\n                                className={classes.padding}\n                                primary={<Typography variant=\"h4\">$203k</Typography>}\n                                secondary={\n                                    <Typography variant=\"subtitle2\" className={classes.secondary}>\n                                        Total Income\n                                    </Typography>\n                                }\n                            />\n                        </ListItem>\n                    </List>\n                </MainCard>\n            )}\n        </React.Fragment>\n    );\n};\n\nTotalIncomeLightCard.propTypes = {\n    isLoading: PropTypes.bool\n};\n\nexport default TotalIncomeLightCard;\n","import React from 'react';\n\n// material-ui\nimport { Card, CardContent, Grid } from '@material-ui/core';\nimport Skeleton from '@material-ui/core/Skeleton';\n\n// project imports\nimport { gridSpacing } from '../../../store/constant';\n\n//-----------------------|| SKELETON TOTAL GROWTH BAR CHART ||-----------------------//\n\nconst TotalGrowthBarChart = () => {\n    return (\n        <Card>\n            <CardContent>\n                <Grid container spacing={gridSpacing}>\n                    <Grid item xs={12}>\n                        <Grid container alignItems=\"center\" justifyContent=\"space-between\" spacing={gridSpacing}>\n                            <Grid item xs zeroMinWidth>\n                                <Grid container spacing={1}>\n                                    <Grid item xs={12}>\n                                        <Skeleton variant=\"text\" />\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <Skeleton variant=\"rect\" height={20} />\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                            <Grid item>\n                                <Skeleton variant=\"rect\" height={50} width={80} />\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Skeleton variant=\"rect\" height={530} />\n                    </Grid>\n                </Grid>\n            </CardContent>\n        </Card>\n    );\n};\n\nexport default TotalGrowthBarChart;\n","//-----------------------|| DASHBOARD - TOTAL GROWTH BAR CHART ||-----------------------//\n\nconst chartData = {\n    height: 480,\n    type: 'bar',\n    options: {\n        chart: {\n            id: 'bar-chart',\n            stacked: true,\n            toolbar: {\n                show: true\n            },\n            zoom: {\n                enabled: true\n            }\n        },\n        responsive: [\n            {\n                breakpoint: 480,\n                options: {\n                    legend: {\n                        position: 'bottom',\n                        offsetX: -10,\n                        offsetY: 0\n                    }\n                }\n            }\n        ],\n        plotOptions: {\n            bar: {\n                horizontal: false,\n                columnWidth: '50%'\n            }\n        },\n        xaxis: {\n            type: 'category',\n            categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\n        },\n        legend: {\n            show: true,\n            fontSize: '14px',\n            fontFamily: `'Roboto', sans-serif`,\n            position: 'bottom',\n            offsetX: 20,\n            labels: {\n                useSeriesColors: false\n            },\n            markers: {\n                width: 16,\n                height: 16,\n                radius: 5\n            },\n            itemMargin: {\n                horizontal: 15,\n                vertical: 8\n            }\n        },\n        fill: {\n            type: 'solid'\n        },\n        dataLabels: {\n            enabled: false\n        },\n        grid: {\n            show: true\n        }\n    },\n    series: [\n        {\n            name: 'Investment',\n            data: [35, 125, 35, 35, 35, 80, 35, 20, 35, 45, 15, 75]\n        },\n        {\n            name: 'Loss',\n            data: [35, 15, 15, 35, 65, 40, 80, 25, 15, 85, 25, 75]\n        },\n        {\n            name: 'Profit',\n            data: [35, 145, 35, 35, 20, 105, 100, 10, 65, 45, 30, 10]\n        },\n        {\n            name: 'Maintenance',\n            data: [0, 0, 75, 0, 0, 115, 0, 0, 0, 0, 150, 0]\n        }\n    ]\n};\nexport default chartData;\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\n// material-ui\nimport { Grid, MenuItem, TextField, Typography, useTheme } from '@material-ui/core';\n\n// third-party\nimport ApexCharts from 'apexcharts';\nimport Chart from 'react-apexcharts';\n\n// project imports\nimport SkeletonTotalGrowthBarChart from './../../../ui-component/cards/Skeleton/TotalGrowthBarChart';\nimport MainCard from './../../../ui-component/cards/MainCard';\nimport { gridSpacing } from './../../../store/constant';\n\n// chart data\nimport chartData from './chart-data/total-growth-bar-chart';\n\nconst status = [\n    {\n        value: 'today',\n        label: 'Today'\n    },\n    {\n        value: 'month',\n        label: 'This Month'\n    },\n    {\n        value: 'year',\n        label: 'This Year'\n    }\n];\n\n//-----------------------|| DASHBOARD DEFAULT - TOTAL GROWTH BAR CHART ||-----------------------//\n\nconst TotalGrowthBarChart = ({ isLoading }) => {\n    const [value, setValue] = React.useState('today');\n    const theme = useTheme();\n\n    const primary = theme.palette.text.primary;\n    const grey200 = theme.palette.grey[200];\n\n    const primary200 = theme.palette.primary[200];\n    const primaryDark = theme.palette.primary.dark;\n    const secondaryMain = theme.palette.secondary.main;\n    const secondaryLight = theme.palette.secondary.light;\n    const grey500 = theme.palette.grey[500];\n\n    React.useEffect(() => {\n        const newChartData = {\n            ...chartData.options,\n            colors: [primary200, primaryDark, secondaryMain, secondaryLight],\n            xaxis: {\n                labels: {\n                    style: {\n                        colors: [primary, primary, primary, primary, primary, primary, primary, primary, primary, primary, primary, primary]\n                    }\n                }\n            },\n            yaxis: {\n                labels: {\n                    style: {\n                        colors: [primary]\n                    }\n                }\n            },\n            grid: {\n                borderColor: grey200\n            },\n            tooltip: {\n                theme: 'light'\n            },\n            legend: {\n                labels: {\n                    colors: grey500\n                }\n            }\n        };\n\n        // do not load chart when loading\n        if (!isLoading) {\n            ApexCharts.exec(`bar-chart`, 'updateOptions', newChartData);\n        }\n    }, [primary200, primaryDark, secondaryMain, secondaryLight, primary, grey200, isLoading, grey500]);\n\n    return (\n        <React.Fragment>\n            {isLoading ? (\n                <SkeletonTotalGrowthBarChart />\n            ) : (\n                <MainCard>\n                    <Grid container spacing={gridSpacing}>\n                        <Grid item xs={12}>\n                            <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n                                <Grid item>\n                                    <Grid container direction=\"column\" spacing={1}>\n                                        <Grid item>\n                                            <Typography variant=\"subtitle2\">Total Growth</Typography>\n                                        </Grid>\n                                        <Grid item>\n                                            <Typography variant=\"h3\">$2,324.00</Typography>\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                                <Grid item>\n                                    <TextField\n                                        id=\"standard-select-currency\"\n                                        select\n                                        value={value}\n                                        onChange={(e) => setValue(e.target.value)}\n                                    >\n                                        {status.map((option) => (\n                                            <MenuItem key={option.value} value={option.value}>\n                                                {option.label}\n                                            </MenuItem>\n                                        ))}\n                                    </TextField>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <Chart {...chartData} />\n                        </Grid>\n                    </Grid>\n                </MainCard>\n            )}\n        </React.Fragment>\n    );\n};\n\nTotalGrowthBarChart.propTypes = {\n    isLoading: PropTypes.bool\n};\n\nexport default TotalGrowthBarChart;\n","import React, { useEffect, useState } from 'react';\n\n// material-ui\nimport { Grid } from '@material-ui/core';\n\n// project imports\nimport EarningCard from './EarningCard';\nimport PopularCard from './PopularCard';\nimport TotalOrderLineChartCard from './TotalOrderLineChartCard';\nimport TotalIncomeDarkCard from './TotalIncomeDarkCard';\nimport TotalIncomeLightCard from './TotalIncomeLightCard';\nimport TotalGrowthBarChart from './TotalGrowthBarChart';\nimport { gridSpacing } from './../../../store/constant';\n\n//-----------------------|| DEFAULT DASHBOARD ||-----------------------//\n\nconst Dashboard = () => {\n    const [isLoading, setLoading] = useState(true);\n    useEffect(() => {\n        setLoading(false);\n    }, []);\n\n    return (\n        <Grid container spacing={gridSpacing}>\n            <Grid item xs={12}>\n                <Grid container spacing={gridSpacing}>\n                    <Grid item lg={4} md={6} sm={6} xs={12}>\n                        <EarningCard isLoading={isLoading} />\n                    </Grid>\n                    <Grid item lg={4} md={6} sm={6} xs={12}>\n                        <TotalOrderLineChartCard isLoading={isLoading} />\n                    </Grid>\n                    <Grid item lg={4} md={12} sm={12} xs={12}>\n                        <Grid container spacing={gridSpacing}>\n                            <Grid item sm={6} xs={12} md={6} lg={12}>\n                                <TotalIncomeDarkCard isLoading={isLoading} />\n                            </Grid>\n                            <Grid item sm={6} xs={12} md={6} lg={12}>\n                                <TotalIncomeLightCard isLoading={isLoading} />\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Grid item xs={12}>\n                <Grid container spacing={gridSpacing}>\n                    <Grid item xs={12} md={8}>\n                        <TotalGrowthBarChart isLoading={isLoading} />\n                    </Grid>\n                    <Grid item xs={12} md={4}>\n                        <PopularCard isLoading={isLoading} />\n                    </Grid>\n                </Grid>\n            </Grid>\n        </Grid>\n    );\n};\n\nexport default Dashboard;\n"],"sourceRoot":""}